from models.order import Order, get_all_orders, get_order_by_id
from models.client import get_all_clients
from models.book import get_all_books, get_book_by_code
from models.order_item import OrderItem, get_items_by_order_id
from datetime import datetime

def manage_order_items(order_id):
    while True:
        print("\n=== üê≥ –ü–æ–∑–∏—Ü–∏–∏ –≤—ã–¥–∞—á–∏ üê≥ ===")
        items = get_items_by_order_id(order_id)
        if not items:
            print("–ù–µ—Ç –ø–æ–∑–∏—Ü–∏–π.")
        else:
            for item in items:
                product = get_book_by_code(item.product_id)
                product_name = product.name if product else "N/A"
                print(f"{item.id}. {product_name} | –ö–æ–ª-–≤–æ: {item.quantity} | –¶–µ–Ω–∞ –∑–∞ –µ–¥–∏–Ω–∏—Ü—É: {item.item_price} —Ä—É–±.")

        print("\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:")
        print("1. üå≥ –î–æ–±–∞–≤–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é üå≥")
        print("2. üçÑ –£–¥–∞–ª–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é üçÑ")
        print("3. üå¥ –ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é üå¥")
        print("0. üåú –ù–∞–∑–∞–¥ –∫ –∑–∞–∫–∞–∑—É –Ω–∞ –≤—ã–¥–∞—á—É üåõ")
        choice = input("üí• –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ")

        if choice == "1":
            books = get_all_books()
            if not books:
                print("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–Ω–∏–≥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è.")
                continue
            print("\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–Ω–∏–≥–∏:")
            for b in books:
                print(f"{b.codebook}. {b.name} - {b.price} —Ä—É–±.")
            try:
                product_id = int(input("–í–≤–µ–¥–∏—Ç–µ ID –∫–Ω–∏–≥–∏: "))
                product = get_book_by_code(product_id)
                if not product:
                    print("–ö–Ω–∏–≥–∞ —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
                    continue
            except:
                print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ ID.")
                continue
            try:
                quantity = int(input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: "))
                if quantity <= 0:
                    print("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.")
                    continue
            except:
                print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞.")
                continue
            item_price = product.price
            new_item = OrderItem(
                order_id=order_id,
                product_id=product_id,
                quantity=quantity,
                item_price=item_price
            )
            new_item.save()
            print("‚úÖ –ü–æ–∑–∏—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞.")
        elif choice == "2":
            try:
                item_id = int(input("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: "))
            except:
                print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ ID.")
                continue
            item = next((i for i in get_items_by_order_id(order_id) if i.id == item_id), None)
            if item:
                item.delete()
                print("–ü–æ–∑–∏—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞.")
            else:
                print("‚ùå –ü–æ–∑–∏—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        elif choice == "3":
            try:
                item_id = int(input("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: "))
            except:
                print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ ID.")
                continue
            items = get_items_by_order_id(order_id)
            item = next((i for i in items if i.id == item_id), None)
            if not item:
                print("‚ùå –ü–æ–∑–∏—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
                continue
            try:
                new_quantity = int(input("–ù–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: "))
                if new_quantity <= 0:
                    print("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.")
                    continue
            except:
                print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥.")
                continue
            item.quantity = new_quantity
            item.save()
            print("–ü–æ–∑–∏—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞.")
        elif choice == "0":
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥.")

def menu_orders():
    while True:
        print("\n=== ‚òÄÔ∏è –ó–∞–∫–∞–∑—ã –Ω–∞ –≤—ã–¥–∞—á—É ‚òÄÔ∏è ===")
        print("1. ‚≠êÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∑–∞–∫–∞–∑—ã ‚≠êÔ∏è")
        print("2. ‚òÉÔ∏è –î–æ–±–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑ ‚òÉÔ∏è")
        print("3. üí¶ –í—ã–¥–∞—Ç—å –∫–Ω–∏–≥—É üí¶")
        print("4. üí® –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏—è–º–∏ –∑–∞–∫–∞–∑–∞ üí®")
        print("0. ‚ö°Ô∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚ö°Ô∏è")
        choice = input("üåà–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ")

        if choice == "1":
            orders = get_all_orders()
            if not orders:
                print("\n–ù–µ—Ç –∑–∞–∫–∞–∑–æ–≤.")
            else:
                clients = get_all_clients()
                client_dict = {c.codeclient: f"{c.name} {c.surname}" for c in clients}

                print("\n–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤:")
                for o in orders:
                    customer_name = client_dict.get(o.client_id, "–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω")
                    
                    items = get_items_by_order_id(o.id)
                    products_desc = []
                    total_price = 0.0
                    for item in items:
                        product = get_book_by_code(item.product_id)
                        product_name = product.name if product else "N/A"
                        products_desc.append(f"{product_name} (x{item.quantity})")
                        total_price += item.quantity * item.item_price

                    products_str = ", ".join(products_desc)
                    print(f"{o.id}. {customer_name} | –¢–æ–≤–∞—Ä—ã: {products_str} | –û–±—â–∞—è: {total_price:.2f} —Ä—É–±. | –í—Ä–µ–º—è: {o.order_date}")
        elif choice == "2":
            clients = get_all_clients()
            if not clients:
                print("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞.")
                continue
            print("\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã:")
            for c in clients:
                print(f"{c.codeclient}. {c.name} {c.surname}")
            try:
                client_id = int(input("–í–≤–µ–¥–∏—Ç–µ ID –∫–ª–∏–µ–Ω—Ç–∞: "))
                if not any(c.codeclient == client_id for c in clients):
                    print("–ö–ª–∏–µ–Ω—Ç —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                    continue
            except:
                print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ ID.")
                continue
            order_date_str = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            order = Order(client_id=client_id, total_amount=0.0, order_date=order_date_str)
            order.save()
            manage_order_items(order.id)
            items = get_items_by_order_id(order.id)
            total_sum = sum(i.quantity * i.item_price for i in items)
            order.total_amount = total_sum
            order.save()
            print(f"–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: {total_sum:.2f} —Ä—É–±.")
        elif choice == "3":
            try:
                order_id_del = int(input("–í–≤–µ–¥–∏—Ç–µ ID –∑–∞–∫–∞–∑–∞ –¥–ª—è –≤—ã–¥–∞—á–∏: "))
            except:
                print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ ID.")
                continue
            order_to_delete = get_order_by_id(order_id_del)
            if order_to_delete:
                order_to_delete.delete()
                print("–ö–Ω–∏–≥–∞(–∏) –≤—ã–¥–∞–Ω–∞(—ã).")
            else:
                print("‚ùå –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        elif choice == "4":
            try:
                order_id_manage = int(input("–í–≤–µ–¥–∏—Ç–µ ID –∑–∞–∫–∞–∑–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏—è–º–∏: "))
            except:
                print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥.")
                continue
            existing_order = get_order_by_id(order_id_manage)
            if not existing_order:
                print("‚ùå –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                continue
            manage_order_items(order_id_manage)
        elif choice == "0":
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥.")